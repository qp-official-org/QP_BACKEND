name: Build And Deploy

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: build with gradle
        run: |
          echo "${{ secrets.ENV }}" > src/main/resources/secrets.properties
          
          source EnvBash.sh
          
          rm src/main/resources/secrets.properties
          
          ./gradlew build

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build and Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }} -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:${{ github.event.pull_request.number }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:${{ github.event.pull_request.number }}

      - name: Publish in EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm .env
            echo "${{ secrets.ENV }}" > .env
            
            sudo docker stop ${{ secrets.REPOSITORY_NAME }} || true
            sudo docker rm ${{ secrets.REPOSITORY_NAME }} || true
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:latest || true
            
            sudo docker run -d --name ${{ secrets.REPOSITORY_NAME }} -p 8080:8080 --env-file .env ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:latest